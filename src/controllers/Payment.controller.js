const createPaymentService = require("../services/Payment.service");
const verifyPayOSSignature = require("../middlewares/AuthMiddleWare");
require("dotenv").config();

const paymentController = {
  // Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
  async createPayment(req, res) {
    const { amount, description } = req.body;
    try {
      const result = await createPaymentService(amount, description);
      return result.EC === 0
        ? res.success(result.result, result.EM)
        : res.error(result.EC, result.EM);
    } catch (error) {
      return res.InternalError(error.message);
    }
  },

  async handleWebhook(req, res) {
    const data = req.body;
    try {
      console.log("Webhook received:", data);
      // üëâ TODO: X·ª≠ l√Ω logic c·∫≠p nh·∫≠t ƒë∆°n h√†ng t·∫°i ƒë√¢y
      // V√≠ d·ª•:
      // 1. T√¨m ƒë∆°n h√†ng theo orderCode ho·∫∑c paymentLinkId
      // 2. C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng th√†nh "paid", "cancelled", ...
      // 3. Ghi log, g·ª≠i th√¥ng b√°o, v.v.

      // Gi·∫£ s·ª≠ b·∫°n d√πng MongoDB:
      // await Order.findOneAndUpdate({ orderCode }, { status: 'paid', paymentTime: Date.now() });
      return res.success(data);
    } catch (error) {
      console.error("Error in handleWebhook:", error.message);
      return res.InternalError(error.message);
    }
  },
};

module.exports = paymentController;
